import { Markup, Telegraf } from "telegraf";
import { IBotContext } from "../context/context.interface";
import { Command } from "./command.class";

export class QuestionCommand extends Command {
    constructor(bot: Telegraf<IBotContext>) {
        super(bot)
    }
    
        handle(): void {
        this.bot.action("questions", async (ctx) => {
            await ctx.editMessageText("–ß–∞—Å—Ç—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –Ω–∏–∂–µ üëá", Markup.inlineKeyboard([
                Markup.button.callback("–°–∫–æ–ª—å–∫–æ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω—è–ª–æ –æ–±—É—á–µ–Ω–∏–µ?", "question1"),
                Markup.button.callback("–ì–¥–µ —Ç—ã —É—á–∏–ª—Å—è?", "question2"),
                Markup.button.callback("üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", "comeback"),
            ], {columns: 1}))
        })

                this.bot.action("question1", async (ctx) => {
            await ctx.editMessageText("1 –≥–æ–¥–∏–∫", Markup.inlineKeyboard([
                Markup.button.callback("üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", "comeback"),
            ], {columns: 1}))
        })

        this.bot.action("question2", async (ctx) => {
            await ctx.editMessageText("–ö—É—Ä—Å—ã Hexlet", Markup.inlineKeyboard([
                Markup.button.callback("üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", "comeback"),
            ], {columns: 1}))
        })
    }
}